services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: vulnscan-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: vulnscan
      MYSQL_USER: vulnscan_user
      MYSQL_PASSWORD: vulnscan_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vulnscan-network

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vulnscan-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/vulnscan?useSSL=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: vulnscan_user
      SPRING_DATASOURCE_PASSWORD: vulnscan_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false
      
      # Application Configuration
      SPRING_APPLICATION_NAME: vuln-scan-ia
      
      # AI Configuration
      AI_PROVIDER_ACTIVE: openai
      AI_OPENAI_ENABLED: true
      AI_OPENAI_API_KEY: ${OPENAI_API_KEY}
      AI_OPENAI_MODEL: gpt-4-turbo-preview
      AI_OPENAI_TEMPERATURE: 0.3
      
      # Claude Configuration (backup)
      AI_CLAUDE_ENABLED: false
      AI_CLAUDE_API_KEY: ${CLAUDE_API_KEY}
      AI_CLAUDE_MODEL: claude-3-sonnet-20240229
      
      # NVD Configuration
      NVD_API_URL: https://services.nvd.nist.gov/rest/json/cves/2.0
      
      # Server Configuration
      SERVER_PORT: 8080
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - vulnscan-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Adminer (Optional - Database Admin UI)
  adminer:
    image: adminer:latest
    container_name: vulnscan-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    networks:
      - vulnscan-network

volumes:
  mysql_data:
    driver: local

networks:
  vulnscan-network:
    driver: bridge